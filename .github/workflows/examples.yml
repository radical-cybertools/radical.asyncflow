name: Examples

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'src/**'
      - 'examples/**'
      - '.github/workflows/examples.yml'
      - '.github/actions/run-example/**'
      - '.github/examples-config.yml'
      - 'pyproject.toml'
  push:
    branches: [ main, master, develop ]
    paths:
      - 'src/**'
      - 'examples/**'
      - '.github/workflows/examples.yml'
      - '.github/actions/run-example/**'
      - '.github/examples-config.yml'
      - 'pyproject.toml'
  workflow_dispatch:
    inputs:
      python-versions:
        description: 'Python versions to test (JSON array)'
        required: false
        default: '["3.9", "3.11", "3.12"]'
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-22.04
    outputs:
      examples: ${{ steps.collect.outputs.examples }}
    steps:
      - uses: actions/checkout@v4

      - name: Ensure yq present
        run: |
          if ! command -v yq >/dev/null 2>&1; then
            sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            sudo chmod +x /usr/local/bin/yq
          fi

      - name: Validate examples-config schema
        run: |
          set -euo pipefail
          CFG=".github/examples-config.yml"
          if [ ! -f "$CFG" ]; then
            echo "❌ Missing $CFG. Please add it."
            exit 2
          fi
          yq -e '.examples | type=="!!map"' "$CFG" >/dev/null \
            || { echo "❌ $CFG: 'examples' must be a mapping"; exit 2; }

      - name: Collect example keys
        id: collect
        run: |
          set -euo pipefail
          CFG=".github/examples-config.yml"
          # produce JSON array of keys: ["ex1","ex2",...]
          keys_json=$(yq -o=json -I=0 '.examples | keys' "$CFG")
          echo "examples=$keys_json" >> "$GITHUB_OUTPUT"
          echo "Examples: $keys_json"

  run:
    needs: plan
    if: ${{ needs.plan.outputs.examples != '[]' && needs.plan.outputs.examples != '' }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        example: ${{ fromJson(needs.plan.outputs.examples) }}
        python-version: ${{ fromJson(inputs.python-versions || '["3.9", "3.11", "3.12"]') }}
      max-parallel: 6
    steps:
      - uses: actions/checkout@v4

      - name: Run example
        uses: ./.github/actions/run-example
        with:
          example: ${{ matrix.example }}
          python-version: ${{ matrix.python-version }}

      - name: Upload outputs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-example-${{ matrix.example }}-py${{ matrix.python-version }}
          path: example-outputs/
          retention-days: 7
          if-no-files-found: warn
